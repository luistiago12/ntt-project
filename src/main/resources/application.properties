# Nome da aplicação
spring.application.name=ntt

# Configuração do Kafka
spring.kafka.bootstrap-servers=localhost:9092

# Configuração do consumidor Kafka
spring.kafka.consumer.group-id=order-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Configuração do produtor Kafka
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Configuração de idempotência do produtor
spring.kafka.properties.enable.idempotence=true

# Configuração do banco de dados PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/nttdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuração do Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Configuração do Redis (atualizada)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=2000ms

# Configurações do Resilience4j
resilience4j.circuitbreaker.instances.requestService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.requestService.waitDurationInOpenState=1000
resilience4j.circuitbreaker.instances.requestService.slidingWindowSize=2

resilience4j.retry.instances.requestService.maxAttempts=3
resilience4j.retry.instances.requestService.waitDuration=500




